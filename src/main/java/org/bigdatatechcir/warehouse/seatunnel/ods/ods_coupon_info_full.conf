#同步MySQL优惠券领用表（增量表）到Doris ods层
env {
  parallelism = 4  # 减少并行度，避免并发冲突
  job.mode = "BATCH"
  checkpoint.interval = 30000

  # 本地文件系统检查点
  execution.checkpoint.data-uri = "file:///opt/seatunnel/checkpoints"
  execution.buffer-timeout = 5000

  # JVM 参数优化
  execution.jvm-options = "-Xms4g -Xmx8g -XX:+UseG1GC -XX:MaxGCPauseMillis=100"
}

source {
  Jdbc {
    result_table_name = "mysql_seatunnel"
    url = "jdbc:mysql://192.168.241.128:3306/gmall?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&rewriteBatchedStatements=true&useServerPrepStmts=true&cachePrepStmts=true"
    driver = "com.mysql.cj.jdbc.Driver"
    connection_check_timeout_sec = 30
    user = "root"  # 修正用户名
    password = ""  # 修正密码

    # 使用分区并行读取
    query = "select id, coupon_name, coupon_type, condition_amount, condition_num, activity_id, benefit_amount, benefit_discount, create_time, range_type, limit_num, taken_count, start_time, end_time, operate_time, expire_time, range_desc from gmall.coupon_info"
    partition_column = "id"
    partition_num = 4  # 减少分区数

    # 连接池配置
    connection_pool {
      max_size = 10  # 减少连接池大小
      min_idle = 3
      max_idle_ms = 60000
    }

    # 批处理配置
    fetch_size = 5000  # 减少批量获取大小
    batch_size = 2000  # 减少批处理大小
    is_exactly_once = true
  }
}

transform {
  Sql {
    source_table_name = "mysql_seatunnel"
    result_table_name = "doris_sink_data"

    query = """
      select 
        id,
        formatdatetime(create_time,'yyyy-MM-dd') as k1,
        coupon_name, 
        coupon_type, 
        condition_amount, 
        condition_num, 
        activity_id, 
        benefit_amount, 
        benefit_discount, 
        create_time, 
        range_type, 
        limit_num, 
        taken_count, 
        start_time, 
        end_time, 
        operate_time, 
        expire_time,
        range_desc
      from mysql_seatunnel
    """
  }
}

sink {
  Doris {
    # 基本连接配置
    source_table_name = "doris_sink_data"  # 使用转换后的数据
    fenodes = "192.168.241.128:8030"
    username = "root"
    password = ""
    table.identifier = "ods.ods_coupon_info_full"  # Doris目标表

    # 事务和标签配置
    sink.enable-2pc = "true"          # 启用两阶段提交，确保一致性
    sink.label-prefix = "cdc_sync"    # 导入标签前缀

    # 写入模式配置
    sink.properties {
      format = "json"
      read_json_by_line = "true"
      column_separator = "\t"         # 列分隔符
      line_delimiter = "\n"           # 行分隔符
      max_filter_ratio = "1.0"        # 允许的最大错误率，调整为1.0允许更多错误

      # CDC特有配置 - 处理不同操作类型
      # 使用Doris的UPSERT模式处理CDC事件
      merge_type = "MERGE"            # 合并类型：APPEND或MERGE
      delete_enable = "true"          # 启用删除操作
    }

    # 性能优化配置
    sink.buffer-size = 5000           # 减小缓冲区大小，避免一次提交太多数据
    sink.buffer-count = 3             # 缓冲区数量
    sink.flush.interval-ms = 5000     # 刷新间隔
    sink.max-retries = 5              # 增加最大重试次数
    sink.parallelism = 4              # 减少写入并行度，避免并发冲突

    # Doris连接优化
    doris.config = {
      format = "json"
      read_json_by_line = "true"
      request_connect_timeout_ms = "10000"  # 增加连接超时
      request_timeout_ms = "60000"         # 增加请求超时
      request_tablet_size = "2"            # 减少每个请求的tablet数量
    }
  }
}