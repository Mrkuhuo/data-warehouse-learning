/*
 * 文件名: dwd_interaction_favor_add_inc_first.sql
 * 功能描述: 互动域收藏商品事务事实表(首次加载) - 记录用户收藏商品行为
 * 数据粒度: 收藏商品事件
 * 刷新策略: 首次增量加载
 * 调度周期: 一次性执行
 * 依赖表: 
 *   - ods.ods_favor_info_full: 商品收藏全量数据
 * 目标表: dwd.dwd_interaction_favor_add_inc
 * 主要功能: 
 *   1. 首次加载全量历史收藏商品数据
 *   2. 生成日期ID字段，便于按日期分析
 *   3. 为后续每日增量加载奠定数据基础
 *   4. 构建用户商品互动行为基础事实
 */

-- 互动域收藏商品事务事实表(首次加载)
INSERT INTO dwd.dwd_interaction_favor_add_inc(
    id,          -- 收藏记录唯一标识
    k1,          -- 数据日期，用于分区
    user_id,     -- 用户ID
    sku_id,      -- 商品SKU ID
    date_id,     -- 日期ID，格式yyyy-MM-dd
    create_time  -- 收藏时间
)
select
    id,                                        -- 收藏记录ID
    k1,                                        -- 分区日期
    user_id,                                   -- 用户ID，关联用户维度
    sku_id,                                    -- 商品SKU ID，关联商品维度
    date_format(create_time,'yyyy-MM-dd') date_id, -- 将时间戳转换为日期ID格式
    create_time                                -- 收藏创建时间
from ods.ods_favor_info_full
-- 注：首次加载不使用k1过滤，加载全量历史数据

/*
 * 设计说明:
 * 1. 首次加载特点:
 *    - 此脚本用于DWD层初始化时一次性执行
 *    - 不使用时间过滤条件，加载所有历史收藏记录
 *    - 后续日常加载应使用dwd_interaction_favor_add_inc_per_day.sql
 *    
 * 2. 数据源选择:
 *    - 使用全量表(ods_favor_info_full)作为数据源
 *    - 可以获取系统中所有历史收藏行为数据
 *    - ODS层的收藏表包含了从系统上线以来的所有收藏记录
 *
 * 3. 时间处理:
 *    - 保留原始create_time字段，保留完整时间信息
 *    - 同时生成date_id字段(格式yyyy-MM-dd)，便于按天汇总分析
 *    - 此设计支持不同时间粒度的分析需求，既可以精确到秒，也可以按天汇总
 *
 * 4. 执行策略:
 *    - 此脚本应在数仓初始化阶段执行一次
 *    - 执行前应确保目标表为空，避免数据重复
 *    - 执行后应立即切换到每日增量加载模式
 *    - 建议在非业务高峰期执行，减少对生产系统的影响
 *
 * 5. 历史数据加载考量:
 *    - 全量历史数据的一次性加载可能会占用较多资源
 *    - 对于超大规模数据，可考虑分批加载策略：
 *      > 按时间区间分批执行
 *      > 设置合理的并行度
 *      > 监控系统资源使用情况
 *    - 加载完成后应进行数据质量检查，确保数据完整性
 *
 * 6. 数据应用场景:
 *    - 用户兴趣分析: 通过收藏行为了解用户偏好
 *    - 商品热度评估: 收藏数量是衡量商品受欢迎程度的指标之一
 *    - 个性化推荐: 为推荐系统提供用户兴趣信号
 *    - 用户行为序列: 结合浏览、加购、下单等行为构建用户行为链路
 *    - 活动效果评估: 分析营销活动前后收藏行为的变化
 *
 * 7. 与其他互动行为的关联:
 *    - 收藏是用户互动行为的重要组成部分
 *    - 可与浏览(page_view)、评论(comment)、购买(order)等行为关联分析
 *    - 有助于构建完整的用户行为画像和商品互动链路
 */